---
import animations from "../../styles/fadeAnimations.module.css";
---

<section id="contacto" class="py-16 md:py-24 bg-white">
  <div class="container mx-auto px-4">
    <div
      class={`text-center mb-16 ${animations.fadeInUp}`}
      id="contact-heading"
    >
      <h2 class="text-3xl md:text-4xl font-bold mb-4 text-black">
        Contáctanos
      </h2>
      <p class="text-lg text-gray-600 max-w-3xl mx-auto">
        ¿Interesado en implementar Mikhuy en tu institución? Completa el
        formulario y nos pondremos en contacto contigo.
      </p>
    </div>

    <div class="max-w-3xl mx-auto">
      <form
        class={`bg-white p-8 rounded-xl shadow-sm border border-gray-200 ${animations.fadeInUp}`}
        id="contact-form"
      >
        <div class="grid md:grid-cols-2 gap-6">
          <div class="space-y-2">
            <label for="name" class="block text-sm font-medium text-gray-700">
              Nombre
            </label>
            <input
              type="text"
              id="name"
              name="name"
              class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-gray-500 focus:border-transparent"
              placeholder="Tu nombre"
            />
          </div>
          <div class="space-y-2">
            <label for="email" class="block text-sm font-medium text-gray-700">
              Email
            </label>
            <input
              type="email"
              id="email"
              name="email"
              class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-gray-500 focus:border-transparent"
              placeholder="tu@email.com"
            />
          </div>
          <div class="space-y-2">
            <label for="phone" class="block text-sm font-medium text-gray-700">
              Teléfono
            </label>
            <input
              type="tel"
              id="phone"
              name="phone"
              class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-gray-500 focus:border-transparent"
              placeholder="+51 923 456 789"
              maxlength="15"
            />
          </div>
          <div class="space-y-2">
            <label
              for="imageFile"
              class="block text-sm font-medium text-gray-700"
            >
              Imagen (opcional)
            </label>
            <input
              type="file"
              id="imageFile"
              name="imageFile"
              accept="image/*"
              class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-gray-500 focus:border-transparent"
            />
          </div>
          <div class="md:col-span-2 space-y-2">
            <label
              for="message"
              class="block text-sm font-medium text-gray-700"
            >
              Mensaje
            </label>
            <textarea
              id="message"
              name="message"
              rows="4"
              class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-gray-500 focus:border-transparent"
              placeholder="¿Cómo podemos ayudarte?"></textarea>
          </div>
          <div class="md:col-span-2">
            <button
              aria-label="Send message"
              class="w-full rounded-lg bg-black hover:bg-black/80 cursor-pointer text-white py-3"
            >
              Enviar Mensaje
            </button>
          </div>
        </div>
      </form>
    </div>
  </div>
</section>

<script type="module">
  const observer = new IntersectionObserver(
    (entries) => {
      entries.forEach((entry) => {
        if (entry.isIntersecting) {
          entry.target.classList.add("show");
          observer.unobserve(entry.target); // Solo una vez
        }
      });
    },
    {
      threshold: 0.1,
    }
  );

  observer.observe(document.getElementById("contact-heading"));
  observer.observe(document.getElementById("contact-form"));
</script>

<script>
  // Utilidades para mostrar mensajes y limpiar inputs
  const displayMessage = (message: string, type: "success" | "error") => {
    let messageSend = document.getElementById(
      "messageSend"
    ) as HTMLElement | null;
    if (!messageSend) {
      messageSend = document.createElement("div");
      messageSend.id = "messageSend";
      messageSend.className = "mt-4 text-center text-base font-semibold";
      const form = document.getElementById("contact-form");
      if (form) form.appendChild(messageSend);
    }
    messageSend.className = `mt-4 text-center text-base font-semibold ${type === "success" ? "text-green-500" : "text-red-500"}`;
    messageSend.innerText = message || "";
    setTimeout(() => {
      if (messageSend) messageSend.innerText = "";
    }, 3000);
  };

  const cleanInputs = () => {
    const name = document.getElementById("name") as HTMLInputElement | null;
    const email = document.getElementById("email") as HTMLInputElement | null;
    const phone = document.getElementById("phone") as HTMLInputElement | null;
    const message = document.getElementById(
      "message"
    ) as HTMLTextAreaElement | null;
    const imageFile = document.getElementById(
      "imageFile"
    ) as HTMLInputElement | null;
    if (name) name.value = "";
    if (email) email.value = "";
    if (phone) phone.value = "";
    if (message) message.value = "";
    if (imageFile) imageFile.value = "";
  };

  // Convierte archivo a base64
  function fileToBase64(file: File): Promise<string | ArrayBuffer | null> {
    return new Promise((resolve, reject) => {
      const reader = new FileReader();
      reader.onload = () => resolve(reader.result);
      reader.onerror = reject;
      reader.readAsDataURL(file);
    });
  }

  async function sendEmail(event: Event) {
    event.preventDefault();

    const nameInput = document.getElementById(
      "name"
    ) as HTMLInputElement | null;
    const emailInput = document.getElementById(
      "email"
    ) as HTMLInputElement | null;
    const phoneInput = document.getElementById(
      "phone"
    ) as HTMLInputElement | null;
    const messageInput = document.getElementById(
      "message"
    ) as HTMLTextAreaElement | null;
    const imageInput = document.getElementById(
      "imageFile"
    ) as HTMLInputElement | null;

    const name = nameInput?.value.trim() || "";
    const email = emailInput?.value.trim() || "";
    const phone = phoneInput?.value.trim() || "";
    const message = messageInput?.value.trim() || "";
    let imageBase64 = null;
    if (imageInput && imageInput.files && imageInput.files[0]) {
      imageBase64 = await fileToBase64(imageInput.files[0]);
    }

    try {
      const response = await fetch("/api/sendEmail", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ name, email, phone, message, imageBase64 }),
      });
      const data = await response.json();
      const responseMessage = data.message;
      if (response.ok) {
        displayMessage(responseMessage, "success");
        cleanInputs();
      } else {
        displayMessage(responseMessage, "error");
        cleanInputs();
        console.error(data.error);
      }
    } catch (error) {
      displayMessage("Error al enviar el correo", "error");
      console.error("Error al enviar el correo:", error);
    }
  }

  document.addEventListener("DOMContentLoaded", () => {
    const form = document.getElementById("contact-form");
    form?.addEventListener("submit", sendEmail);
  });
</script>
